
variables:
  DOCKER_REGISTRY: registry.cn-chengdu.aliyuncs.com
  APP_VERSION: 0.1.0-SNAPSHOT

secrets:
  DOCKER_AUTH: usernamePassword/acr-docker-auth

stages:
  - name: prepare
    steps:
      - use: script
        code: |
          echo -n "${DOCKER_AUTH_PSW}" |docker login -u ${DOCKER_AUTH_USR} --password-stdin ${DOCKER_REGISTRY}

          echo "--//INFO: Create app version..."
          _app_version=$(echo "${APP_VERSION}" | sed 's/-SNAPSHOT//g')-$(date '+%Y%m%d%H%M%S').`git rev-parse --short HEAD`
          echo "APP_VERSION2=${_app_version}" >> ${OPSBOX_ENV}

  - name: build image
    steps:
      - use: script
        image: golang:1.19.0-buster
        code: |
          set -eux
          export GOPROXY=https://proxy.golang.com.cn,direct
          go mod download 
          go mod verify
          go build -ldflags="-w -s" -v -o godemo

      - use: script
        code: |
          docker build -t ${DOCKER_REGISTRY}/k8ops/godemo:${APP_VERSION2} . -f Dockerfile
          docker push ${DOCKER_REGISTRY}/k8ops/godemo:${APP_VERSION2}

    after-steps:
      - use: script
        code: |
          docker logout ${DOCKER_REGISTRY}

  - name: deploy
    only:
      BRANCH_NAME: ["master", "release/*"]
    secrets:
      KUBECONFIG: file/kubeconfig-homelab
    steps:
      - use: script
        code: |
          echo "--//info: start deploy "
          cd deploy/overlays/test
          kustomize edit set image godemo=${DOCKER_REGISTRY}/k8ops/godemo:${APP_VERSION2}
          kustomize build . | kubectl apply -f - 


